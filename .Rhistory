x_5 <- replicate(10000,mean(rchisq(5, 2)))
x_30 <- replicate(10000,mean(rchisq(30, 2)))
x_300 <- replicate(10000,mean(rchisq(10000, 2)))
temp_df <- data.frame(x = c(x_5, x_30, x_300), Index=rep(c(5, 30, 300),each=10000))
ggplot(temp_df, aes(x=x)) + geom_density()+ facet_grid(~Index)
x_5 <- replicate(10000,mean(rchisq(5, 3)))
x_30 <- replicate(10000,mean(rchisq(30, 3)))
x_300 <- replicate(10000,mean(rchisq(10000, 3)))
x_300 <- replicate(10000,mean(rchisq(100, 3)))
x_5 <- replicate(10000,mean(rchisq(5, 3)))
x_30 <- replicate(10000,mean(rchisq(30, 3)))
x_300 <- replicate(10000,mean(rchisq(100, 3)))
temp_df <- data.frame(x = c(x_5, x_30, x_300), Index=rep(c(5, 30, 300),each=10000))
ggplot(temp_df, aes(x=x)) + geom_density()+ facet_grid(~Index)
x_5 <- replicate(10000,mean(rchisq(3, 3)))
x_30 <- replicate(10000,mean(rchisq(30, 3)))
x_300 <- replicate(10000,mean(rchisq(100, 3)))
temp_df <- data.frame(x = c(x_5, x_30, x_300), Index=rep(c(3, 30, 100),each=10000))
ggplot(temp_df, aes(x=x)) + geom_density()+ facet_grid(~Index)
ggplot(temp_df, aes(x=x)) + geom_density()+ facet_grid(~Index) + xlab("") + ylab("")
ggplot(temp_df, aes(x=x)) + geom_density()+ facet_grid(~Index, scales = "free") + xlab("") + ylab("")
install.packages("googleComputeEngineR")
library(googleComputeEngineR)
## setting up a 13GB RAM instance
## see gce_list_machinetype() for options of predefined_type
vm <- gce_vm(template = "rstudio-hadleyverse",
name = "rstudio-team",
username = "mark", password = "mark1234",
predefined_type = "n1-highmem-2")
sum(1:6)
sum(1:6)/6
dbinom(1:6, 1, 1/6)
?dmultinom()
dmultinom(1, 1, rep(1/6,6))
dmultinom(1, 6, rep(1/6,6))
rmultinom(10, size = 12, prob = c(0.1,0.2,0.8))
dmultinom(10, size = 12, prob = c(0.1,0.2,0.8))
round(apply(X, 2, function(x) dmultinom(x, prob = c(1,2,5))), 3)
X <- t(as.matrix(expand.grid(0:3, 0:3))); X <- X[, colSums(X) <= 3]
X <- rbind(X, 3:3 - colSums(X)); dimnames(X) <- list(letters[1:3], NULL)
X
round(apply(X, 2, function(x) dmultinom(x, prob = c(1,2,5))), 3)
library(dice)
install.packages("dice")
library(dice)
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities
dice::getSumProbs(ndicePerRoll=2,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities -> A
A
str(A)
A[,2]
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,2]
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,2] %>% hist()
library(dplyr)
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,2] %>% hist()
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[1,2] %>% data.frame()
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>% data.frame()
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>% data.frame()
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability))
library(ggplot2)
library(dice)
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability))
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability)) + geom_bar()
?geom_bar
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability)) + geom_histogram()
?geom_bar
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability)) + geom_bar()
?geom_bar
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability)) + geom_line()
dice::getSumProbs(ndicePerRoll=1,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability)) + geom_bar(stat = "identity")
dice::getSumProbs(ndicePerRoll=2,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability)) + geom_bar(stat = "identity")
dice::getSumProbs(ndicePerRoll=3,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability)) + geom_bar(stat = "identity")
dice::getSumProbs(ndicePerRoll=4,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability)) + geom_bar(stat = "identity")
dice::getSumProbs(ndicePerRoll=5,
nsidesPerDie=6,
perDieModifier = 0,
perDieMinOfOne = TRUE)$probabilities[,1:2] %>%
data.frame() %>%
ggplot(aes(x=Sum, y=Probability)) + geom_bar(stat = "identity")
library(tidyverse)
library(data.table)
fread
fread(file.choose(), header=TRUE)
library(tidyverse)
e <- rnorm(10000)
x <- rnorm(10000)
y <- 1 + 3*x + e
boot <- function(x,y){
index <- sample(length(x),5)
sub_y <- y[index]
sub_x <- x[index]
coef(lm(y~x))
}
R <- replicate( boot(x,y) , 1000)
n <- length(x)
n
sample(n,3)
sample(n,3)
boot <- function(x,y){
n <- length(x)
index <- sample(n,5)
sub_y <- y[index]
sub_x <- x[index]
coef(lm(y~x))
}
R <- replicate( boot(x,y) , 1000)
x
y
boot <- function(x,y){
n <- length(x)
index <- sample(n,5)
sub_y <- y[index]
sub_x <- x[index]
coef(lm(y~x))
}
boot(x,y)
R <- replicate( boot(x, y), 1000)
boot <- function(x,y){
n <- length(x)
index <- sample(n,5)
sub_y <- y[index]
sub_x <- x[index]
as.numeric(coef(lm(y~x)))
}
R <- replicate( boot(x, y), 1000)
?replicate
R <- replicate(1000, boot(x, y))
R
boot <- function(x,y){
n <- length(x)
index <- sample(n,3)
sub_y <- y[index]
sub_x <- x[index]
coef(lm(y~x))
}
R <- replicate(1000, boot(x, y))
R
R <- replicate(1000, boot(x, y), simplify = "array")
R
e <- rnorm(10000)
x <- rnorm(10000)
y <- 1 + 3*x + e
boot <- function(x,y){
n <- length(x)
index <- sample(n,3)
sub_y <- y[index]
sub_x <- x[index]
coef(lm(sub_y~sub_x))
}
R <- replicate(1000, boot(x, y), simplify = "array")
R
t(R)
boxplot(t(R))
boxplot(t(R[,2]))
boxplot(t(R[2,]))
R
rowMeans(R)
e <- rnorm(10000)
x <- rnorm(10000)
y <- 1 + 3*x + e
boot <- function(x,y){
n <- length(x)
index <- sample(n,100)
sub_y <- y[index]
sub_x <- x[index]
coef(lm(sub_y~sub_x))
}
R <- replicate(1000, boot(x, y), simplify = "array")
rowMeans(R)
apply(R, 1, var)
e <- rnorm(10000)
x <- rnorm(10000)
y <- 1 + 3*x + e
boot <- function(x,y){
n <- length(x)
index <- sample(n,3)
sub_y <- y[index]
sub_x <- x[index]
coef(lm(sub_y~sub_x))
}
R <- replicate(1000, boot(x, y), simplify = "array")
apply(R, 1, var)
apply(R, 1, mean)
hist(R[,2])
hist(R[2,])
hist(R[2,], breaks=100)
letters
typeof(letters)
length(letters)
LETTERS
LETTERS
seq_along()
?seq_along()
seq_along(1:#)
seq_along(1:3)
seq_along(c(1,10))
?
y <- c(1.2, 3.9, 0.4, 0.12)
y
x <- c(-1, 0, 1, 2)
y <- c(1.2, 3.9, 0.4, 0.12)
y[c(1,3)]
x <- c(-1, 0, 1, 2)
y[x > 0]
y[c(3, 1, 3)]
x <- c(-1, 0, 1, 2)
y[x > 0]
seq(from = -2, to = 5, by = 0.5)
seq(from = -2, to = 3, by = 0.5)
example(Seq)
example(seq)
rep(3, 5)
rep(c(1, 3), 5)
rep(c(1, 3), each = 5)
?rep
any(x > 3)
x
x <- c(1, 2, 5, 6, 7)
x
all(x > 3)
all(x > 0)
seq_along
?seq_along
seq_along(3)
seq_along(1:3)
seq_along(rnorm(3))
c(TRUE, 1)
y <- c(1.2, 3.9, 0.4, 0.12)
seq_along(y)
Sys.time()
mean(x, na.rm = TRUE)
x <- c(10, 20, NULL, 30, 40)
length(x)
mean(x)
x <- NULL
x <- c(x, 1)
x
library(stringdist)
stringdistmatrix()
?stringdistmatrix()
a <- c("Seoul", "Busan")
b <- c("Seul", "Pusan")
stringdist(a, b)
tringdist('ca','abc')
stringdist('abc','ca')
stringdistmatrix(a, b)
b <- c("Seoul", "Pusan")
stringdistmatrix(a, b)
a <- c("Seoul", "Busan")
b <- c("Seoul", "Pusan")
stringdistmatrix(a, b)
3 + 5
x <- 3
x
x
x <- 3
y <- 5
x + y
z <- x + y
z
x = 3
x
ch <- "Hello World!"
ch
rm(list = ls())
3 + 5
x <- 3
y <- 5
x + y
rm(list = ls())
x + y
x <- 3
y <- 5
x + y
z <- x + y
x <- c(1, 3, 5, 6)
length(y)
length(x)
x + 0.2
x + 0.2
x * 0.2
x[1]
x[2]
x
x <- c(1, 2)
c
c <- c(1, 2)
c
c(1, 3)
d
T
F
p
q
df
dp
dt
t
?c
mat_items <- c(1, 2, 3, 4)
matrix(mat_items, nrow = 2)
matrix(mat_items, nrow = 2,byrow = TRUE)
matrix(mat_items, nrow = 2, byrow = TRUE)
library(tidyverse)
iris
summarise_all(iris, mean)
summarise_all(iris, var())
summarise_all(iris, var)
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
dim(flights)
flights
data.frame(flights)
flights
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
2^16
x
x <- seq(from = 0, to = 5.5, by = 0.1)
save.image(file = "20180918.rdata")
getwd
getwd()
runif(20)
x <- stats::runif(20)
y <- list(a = 1, b = TRUE, c = "oops")
save(x, y, file = "xy.RData")
save.image() # creating ".RData" in current working directory
getwd()
q()
summary(cars)
plot(pressure)
plot(pressure)
par(mar=c(1,1,1,1))
plot(pressure)
knitr::opts_chunk$set(collapse = T, comment = "#>", tidy = TRUE, warning = FALSE)
options(tibble.print_min = 4L, tibble.print_max = 4L)
library(dplyr)
library(tidyverse)
library(ggplot2)
set.seed(1014)
setwd("~/Dropbox/teaching/STA3034/Lecture")
library(nycflights13)
flights
dim(flights)
class(flights)
x <- seq(from=0,to=1,by=0.1)
y <- seq(from = 0, to = 1, by = 0.1)
x == y
arrange(flights, year, month, day)
arrange(flights, desc(arr_delay))
arrange(flights, desc(dep_time))
arrange(flights, desc(day))
arrange(flights, -day)
nms <- names(flights)
nms
contains(nms, "time")
class(nms)
?contains
tidyselect::contains()
tidyselect::contains(nms, match = "time")
tidyselect::contains(nms, "time")
vars_select(contains(nms, "time"))
library(tidyselect)
vars_select(contains(nms, "time"))
vars_select(nms, contains("time"))
select(flights, vars_select(nms, contains("time")))
str(flights)
select_if(flights, is.numeric())
select_if(flights, is.numeric)
select_if(flights, is.string)
select_if(flights, is.character)
getwd()
source("create-all.r")
mutate(flights,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60
)
muta <- mutate(flights,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60
)
str(muta)
names(flights)
names(muta)
mutate(flights,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60
)
sample_n(flights, 10)
sample_frac(flights, .001)
by_tailnum <- group_by(flights, tailnum)
delay <- summarise(by_tailnum,
count = n(), # we will learn about this in the next slides
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE))
delay <- filter(delay, count > 20, dist < 2000)
delay
length(unique(flights$tailnum))
delay <- summarise(by_tailnum,
count = n(), # we will learn about this in the next slides
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE))
length(unique(flights$tailnum))
nrow(delay)
gl
gl(5, 3)
setwd("~/Dropbox/bunge/code")
setwd("~/Dropbox/teaching/STA3034/lecture")
source("create-all.r")
iris
names(iris)
rownames(iris)
preg <- read_csv("data/preg.csv")
preg
source("create-all.r")
library(kormaps2014)
a <- korpop3
a %>% data.frame(stringAsFactors)
a %>% data.frame(stringAsFactors = TRUE)
library(tidyverse)
a %>% data.frame(stringAsFactors = TRUE)
a %>% data.frame(stringAsFactors = TRUE) %>% str
a %>% data.frame(stringAsFactors = FALSE) %>% str
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/Github/ydhwang.github.io")
